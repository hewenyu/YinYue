name: Windows Build

on:
  workflow_call:
    outputs:
      artifact-name:
        description: "The name of the uploaded artifact"
        value: YinYue-windows
  

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Cache vcpkg
      uses: actions/cache@v3
      with:
        path: |
          C:/vcpkg
          !C:/vcpkg/buildtrees
          !C:/vcpkg/packages
          !C:/vcpkg/downloads
        key: vcpkg-${{ runner.os }}-${{ hashFiles('**/vcpkg.json') }}

    - name: Setup vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git C:/vcpkg
        C:/vcpkg/bootstrap-vcpkg.bat
        C:/vcpkg/vcpkg integrate install

    - name: Install Qt (static)
      run: |
        C:/vcpkg/vcpkg install qt5-base:x64-windows-static qt5-multimedia:x64-windows-static qt5-tools:x64-windows-static

    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Install Ninja
      run: |
        choco install ninja

    - name: Configure CMake
      shell: pwsh
      run: |
        cmake -B ${{github.workspace}}/build `
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} `
          -G "Ninja" `
          -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake `
          -DVCPKG_TARGET_TRIPLET=x64-windows-static `
          -DBUILD_SHARED_LIBS=OFF

    - name: Build
      shell: pwsh
      run: |
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Create Release Package
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Force -Path release\YinYue
        Copy-Item build\bin\YinYue.exe release\YinYue\
        Copy-Item README.md release\YinYue\
        Compress-Archive -Path release\YinYue -DestinationPath release\YinYue-windows-x64.zip -Force

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: YinYue-windows
        path: release/YinYue-windows-x64.zip 